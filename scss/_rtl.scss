//
// Right to left related overrides
//

$modifier-directions-rtl: (
  pull: left,
  push: right,
  offset: right
) !default;

// scss-lint:disable QualifyingElement
[dir=rtl] {

  caption,
  th {
    text-align: right;
  }

  .navbar-side {
    float: left;
  }
  .close {
    float: left;
  }
  .modal {
    direction: ltr; // Aligns the modal scrollbar to the right

    .modal-dialog {
      direction: rtl;
    }
  }
  .modal-footer {
    text-align: left;

    .dropdow-menu {
      text-align: right;
    }
  }
  .alert-dismissible {
    padding-left: ($alert-padding + 20);
    padding-right: $alert-padding;

    .close {
      margin-left: -21px;
      margin-right: 0;
    }
  }
  .list-group,
  .pagination,
  .pager {
    padding-right: 0;
  }
  .list-group-item > .label {
    float: left;
  }
  .pager-prev > a,
  .pager-prev > span {
    float: right;
  }
  .pager-next > a,
  .pager-next > span {
    float: left;
  }
  .page-link {
    margin-right: 0;
    margin-left: -1px;
  }
  .page-item {

    &:first-child .page-link {
      margin-left: -1px;
      @include border-radius(0 $border-radius $border-radius 0);
    }
    &:last-child .page-link {
      margin-left: 0;
      @include border-radius($border-radius 0 0 $border-radius);
    }
  }
  .input-group-addon {

    &:first-child {
      border-right-width: 1px;
      border-left: 0;
      @include border-radius(0 $border-radius $border-radius 0);
    }
    &:last-child {
      border-left-width: 1px;
      border-right: 0;
      @include border-radius($border-radius 0 0 $border-radius);
    }
  }
  .input-group-btn {

    &:first-child > .btn,
    &:first-child > .btn-group {
      margin-right: 0;
      margin-left: -1px;
    }
    &:last-child > .btn,
    &:last-child > .btn-group {
      margin-left: 0;
      margin-right: -1px;
    }
  }
  .input-group .form-control:not(:last-child),
  .input-group-addon:not(:last-child),
  .input-group-btn:not(:last-child) > .btn,
  .input-group-btn:not(:last-child) > .btn-group > .btn,
  .input-group-btn:not(:last-child) > .dropdown-toggle,
  .input-group-btn:not(:first-child) > .btn:not(:last-child):not(.dropdown-toggle),
  .input-group-btn:not(:first-child) > .btn-group:not(:last-child) > .btn {
    @include border-radius(0 $border-radius $border-radius 0);
  }
  .form-control {

    + .input-group .form-control:not(:first-child),
    + .input-group-addon:not(:first-child),
    + .input-group-btn:not(:first-child) > .btn,
    + .input-group-btn:not(:first-child) > .btn-group > .btn,
    + .input-group-btn:not(:first-child) > .dropdown-toggle,
    + .input-group-btn:not(:last-child) > .btn:not(:first-child),
    + .input-group-btn:not(:last-child) > .btn-group:not(:first-child) > .btn {
      border-left-width: 1px;
      @include border-radius($border-radius 0 0 $border-radius);
    }
  }
  .checkbox label,
  .radio label,
  .custom-control {
    padding-left: 0;
    padding-right: $input-padding-x-lg;
  }
  .checkbox input[type=checkbox],
  .checkbox-inline input[type=checkbox],
  .radio input[type=radio],
  .radio-inline input[type=radio] {
    margin-left: 0;
    margin-right: $input-padding-x-lg * -1;
  }
  .custom-control-indicator {
    left: auto;
    right: 0;
  }
  .file-custom::before {
    right: auto;
    left: -.075rem;
    top: -.037rem;
    @include border-radius($border-radius 0 0 $border-radius);
  }

  $breakpoint-counter: 0;
  @each $breakpoint in map-keys($grid-breakpoints) {
    $breakpoint-counter: ($breakpoint-counter + 1);
    @include media-breakpoint-up($breakpoint) {

      @each $modifier in (pull, push) {
        [class*=#{$modifier}-#{$breakpoint}] {
          #{map-get($modifier-directions, $modifier)}: auto;
        }
        @for $i from 0 through $grid-columns {
          .#{$modifier}-#{$breakpoint}-#{$i} {
            @include make-col-modifier($modifier, $i, $grid-columns, #{map-get($modifier-directions-rtl, $modifier)})
          }
        }
      }

      // `$grid-columns - 1` because offsetting by the width of an entire row isn't possible
      @for $i from 0 through ($grid-columns - 1) {
        [class*=offset-#{$breakpoint}] {
          #{map-get($modifier-directions, offset)}: auto;
        }
        @if $breakpoint-counter != 1 or $i != 0 { // Avoid emitting useless .offset-xs-0
          .offset-#{$breakpoint}-#{$i} {
            @include make-col-modifier(offset, $i, $grid-columns, #{map-get($modifier-directions-rtl, offset)})
          }
        }
      }
    }
  }
}
// scss-lint:enable QualifyingElement